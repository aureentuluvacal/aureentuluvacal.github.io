{"version":3,"file":"component---src-templates-blog-post-js-cdce3c8664b147b1bec9.js","mappings":"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","sources":["webpack://blog/./src/components/seo.js","webpack://blog/./src/components/tag.js","webpack://blog/./src/templates/blog-post.js"],"sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nconst SEO = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: 'description',\n          content: metaDescription\n        },\n        {\n          property: 'og:title',\n          content: title\n        },\n        {\n          property: 'og:description',\n          content: metaDescription\n        },\n        {\n          property: 'og:type',\n          content: 'website'\n        }\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  description: ''\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n}\n\nexport default SEO\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Tag = ({ name }) => {\n  const getTagColor = () => {\n    switch (name) {\n      case 'Code':\n        return '#FF50F1'\n      case 'Math':\n        return '#8C55E5'\n      case 'Personal':\n        return '#B64E5C'\n      case 'Science':\n        return '#7be21d'\n      default:\n        return '#0577CE'\n    }\n  }\n\n  const tagColor = getTagColor();\n\n  const styles = {\n    color: tagColor,\n    border: `2px solid ${tagColor}`,\n    borderRadius: '20px',\n    margin: '0 4px',\n    padding: '2px 8px',\n    fontWeight: 'bold'\n  }\n\n  return <Link to={`/tags/${name.toLowerCase()}`} style={styles}>{name}</Link>\n}\n\nexport default Tag\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Seo from '../components/seo'\nimport Tag from '../components/tag'\nimport { rhythm, scale } from '../utils/typography'\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const { previous, next } = pageContext\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article>\n        <header>\n          <h1\n            style={{\n              marginTop: rhythm(1),\n              marginBottom: 0\n            }}\n          >\n            {post.frontmatter.title}\n          </h1>\n          {post.frontmatter.subtitle && (\n            <h2\n              style={{\n                marginTop: rhythm(0.5),\n                marginBottom: 0\n              }}\n            >\n              {post.frontmatter.subtitle}\n            </h2>\n          )}\n          <p\n            style={{\n              ...scale(-1 / 10),\n              display: 'block',\n              marginTop: rhythm(0.2),\n              marginBottom: rhythm(1)\n            }}\n          >\n            {post.frontmatter.date} • {`${post.timeToRead} min read`} {post.frontmatter.tags.map(tag => <Tag key={tag} name={tag} />)}\n          </p>\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1)\n          }}\n        />\n      </article>\n\n      <nav>\n        <ul\n          style={{\n            display: 'flex',\n            flexWrap: 'no-wrap',\n            justifyContent: 'space-between',\n            listStyle: 'none',\n            padding: 0,\n            fontSize: '16px'\n          }}\n        >\n          <li style={{ width: '340px' }}>\n            {previous && (\n              <Link to={previous.fields.slug} rel='prev' style={{ width: '340px' }}>\n                ← {previous.frontmatter.title}\n                {previous.frontmatter.subtitle && `: ${previous.frontmatter.subtitle}`}\n              </Link>\n            )}\n          </li>\n          <li style={{ minWidth: '340px', textAlign: 'right' }}>\n            {next && (\n              <Link to={next.fields.slug} rel='next'>\n                {next.frontmatter.title} →\n                <br />\n                {next.frontmatter.subtitle}\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      timeToRead\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        subtitle\n        tags\n      }\n    }\n  }\n`\n"],"names":["SEO","_ref","description","lang","meta","title","site","useStaticQuery","metaDescription","siteMetadata","React","Helmet","htmlAttributes","titleTemplate","name","content","property","concat","defaultProps","tagColor","getTagColor","styles","color","border","borderRadius","margin","padding","fontWeight","Link","to","toLowerCase","style","data","pageContext","location","post","markdownRemark","siteTitle","previous","next","Layout","Seo","frontmatter","excerpt","marginTop","rhythm","marginBottom","subtitle","scale","display","date","timeToRead","tags","map","tag","Tag","key","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","fontSize","width","fields","slug","rel","minWidth","textAlign"],"sourceRoot":""}