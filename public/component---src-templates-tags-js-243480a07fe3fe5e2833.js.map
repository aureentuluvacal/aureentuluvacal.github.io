{"version":3,"file":"component---src-templates-tags-js-243480a07fe3fe5e2833.js","mappings":"0IAyDA,UApDaA,IAAsC,IAArC,KAAEC,EAAI,YAAEC,EAAW,SAAEC,GAAUH,EAC3C,MAAM,IAAEI,GAAQF,GACV,MAAEG,EAAK,WAAEC,GAAeL,EAAKM,kBAC7BC,EAAa,GAAEF,SACJ,IAAfA,EAAmB,GAAK,oBACTF,KAEjB,OACEK,EAAAA,cAACC,EAAAA,EAAM,CAACP,SAAUA,EAAUQ,MAAM,aAChCF,EAAAA,cAAA,UAAKD,GACJH,EAAMO,KAAIC,IAAe,IAAd,KAAEC,GAAMD,EAClB,MAAM,KAAEE,GAASD,EAAKE,QAChB,MAAEL,EAAK,SAAEM,GAAaH,EAAKI,YAC3BC,EAAYF,EAAY,GAAEN,MAAUM,IAAaN,EAEvD,OACEF,EAAAA,cAAA,WAASW,IAAKT,GACZF,EAAAA,cAACY,EAAAA,KAAI,CAACC,GAAIP,GACRN,EAAAA,cAAA,YAAOU,IAED,IAGdV,EAAAA,cAAA,WACAA,EAAAA,cAACY,EAAAA,KAAI,CAACC,GAAG,SAAQ,YACV,C","sources":["webpack://blog/./src/templates/tags.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/layout'\n\nconst Tags = ({ data, pageContext, location }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? '' : 's'\n  } tagged with \"${tag}\"`\n\n  return (\n    <Layout location={location} title='Cal Perez'>\n      <h2>{tagHeader}</h2>\n      {edges.map(({ node }) => {\n        const { slug } = node.fields\n        const { title, subtitle } = node.frontmatter\n        const fullTitle = subtitle ? `${title}: ${subtitle}` : title\n\n        return (\n          <article key={title}>\n            <Link to={slug}>\n              <span>{fullTitle}</span>\n            </Link>\n          </article>\n        )\n      })}\n      <br/>\n      <Link to='/tags'>All tags</Link>\n    </Layout>\n  )\n}\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired\n            })\n          })\n        }).isRequired\n      )\n    })\n  })\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            subtitle\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["_ref","data","pageContext","location","tag","edges","totalCount","allMarkdownRemark","tagHeader","React","Layout","title","map","_ref2","node","slug","fields","subtitle","frontmatter","fullTitle","key","Link","to"],"sourceRoot":""}